@using Zoekjaar.Web.Models
@using Zoekjaar.Resources

@model CompanyProfileModel
@{
	ViewBag.Title = ApplicationStrings.EditProfile;
}

<div class="body">
	<div class="container">
		@if (Model.IsSuccessful.HasValue)
  {
	  string message;
	  if (Model.IsSuccessful.Value)
	  {
		  message = string.Format("{1} {0}", ApplicationStrings.Saved, ApplicationStrings.Profile);
			<div class="alert alert-success"><strong>@ApplicationStrings.Success</strong>  @message</div>
	  }
	  else
	  {
		  message = string.Format("Error {0} {1}", ApplicationStrings.Saving, ApplicationStrings.Profile);
			<div class="alert alert-error"><strong>@ApplicationStrings.Failed</strong> @message</div>
	  }
  }
		<div class="row-fluid margin-bottom-10">
			<div class="span9">
				@using (Html.BeginForm())
	{
					@Html.AntiForgeryToken()
					@Html.HiddenFor(_ => _.Company.Id)
					@Html.HiddenFor(_ => _.Company.UserId)
					@Html.HiddenFor(_ => _.Company.IsActive)
					@Html.HiddenFor(_ => _.Company.IsFeatured)
					
					<div class="controls">
						@Html.LabelFor(_ => _.Company.Name)
						@Html.TextBoxFor(_ => _.Company.Name, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.Company.Name)
						@Html.LabelFor(_ => _.Company.Website)
						@Html.TextBoxFor(_ => _.Company.Website, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.Company.Website)
						@Html.LabelFor(_ => _.Company.Sector)
						@Html.TextBoxFor(_ => _.Company.Sector, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.Company.Sector)
						@Html.LabelFor(_ => _.Company.LinkedIn)
						@Html.TextBoxFor(_ => _.Company.LinkedIn, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.Company.LinkedIn)
						@Html.LabelFor(_ => _.Company.City)
						@Html.TextBoxFor(_ => _.Company.City, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.Company.City)
						@Html.LabelFor(_ => _.Company.GooglePlus)
						@Html.TextBoxFor(_ => _.Company.GooglePlus, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.Company.GooglePlus)
					</div>
					<div class="controls">
						<div class="span12 margin-bottom-10">
							@Html.Label("editor", "Profile")
							@Html.Partial("_HtmlEditor", new HtmlEditorModel
  {
	  Id = "editor",
	  ModelId = "Company_Profile",
	  Content = Model.Company.Profile
  })
							@Html.HiddenFor(_ => _.Company.Profile)
						</div>
					</div>
					<div class="controls form-inline">
						<input type="submit" value="@ApplicationStrings.SaveChanges" class="btn-u pull-right collect-wysiwyg" />
					</div>
	
	}
			</div>
			@{
				var logo = string.IsNullOrEmpty(Model.Company.LogoUrl) ? "~/Content/images/logo.png" : string.Format("~/Content/images/Companies/{0}", Model.Company.LogoUrl);
			}
			<div class="span3">
				<div class="thumbnail-img upload-image">
					<div class="overflow-hidden">
						<img id="company-logo" data-src="holder.js/200x200" alt="200x200" src="@Url.Content(logo)">
					</div>
					<span class="btn btn-primary fileinput-button upload-image-overlay">
						<i class="icon icon-camera"></i> <span>Change</span>
						<input id="fileupload" type="file" name="files[]" data-url="@Url.Action("Upload")">
					</span>
				</div>
			</div>
		</div>
	</div>
</div>

@section styles{
	@Styles.Render("~/Content/upload")
}

@section scripts{
	@Scripts.Render("~/bundles/wysiwyg")
	@Scripts.Render("~/bundles/upload")
}