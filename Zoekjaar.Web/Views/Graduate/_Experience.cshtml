@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Extensions
@using Zoekjaar.Resources

@model GraduateExperienceModel

@{
	var currentRoute = new RouteValueDictionary(this.ViewContext.RouteData.Values);
	var hidden = Model.Items.Count() > 0 ? "hidden" : "";
}
<div class="headline">
	<h4>@ApplicationStrings.ProfessionalExperience</h4>
</div>

@if (Model.IsSuccessful.HasValue)
  {
	  string message;
	  if (Model.IsSuccessful.Value)
	  {
		  message = string.Format("{1} {0}", ApplicationStrings.Saved, ApplicationStrings.ProfessionalExperience);
			<div class="alert alert-success"><strong>@ApplicationStrings.Success</strong>  @message</div>
	  }
	  else
	  {
		  message = string.Format("Error {0} {1}", ApplicationStrings.Saving, ApplicationStrings.ProfessionalExperience);
			<div class="alert alert-error"><strong>@ApplicationStrings.Failed</strong> @message</div>
	  }
  }

<div class="template-container" @hidden>
	@Html.HiddenFor(_ => _.Template.Id)
	@Html.HiddenFor(_ => _.Template.GraduateId)
	<div class="controls">
		@Html.LabelFor(_ => _.Template.CompanyName)
		@Html.TextBoxFor(_ => _.Template.CompanyName, new { @class = "span6" })
		@Html.ValidationMessageFor(_ => _.Template.CompanyName)
	</div>
	<div class="controls">
		<div class="span6">
			@Html.LabelFor(_ => _.Template.CompanyProfile)
			@Html.TextBoxFor(_ => _.Template.CompanyProfile, new { @class = "span12" })
			@Html.ValidationMessageFor(_ => _.Template.CompanyProfile)
		</div>
		<div class="span6">
			@Html.LabelFor(_ => _.Template.Experience)
			@Html.TextBoxFor(_ => _.Template.Experience, new { @class = "span12" })
			@Html.ValidationMessageFor(_ => _.Template.Experience)
		</div>
	</div>
	<div class="controls">
		<div class="span12">
			<input id="save" type="submit" name="submit-experience" class="btn-u pull-right btn-save" data-target-url="@Url.Action("Experience")" value="@ApplicationStrings.SaveChanges" />
		</div>
	</div>
</div>
<div class="row-fluid">
	<div class="span12">
		<div class="unstyled inline">
			<a href="#" class="btn-add"><i class="icon-plus"></i>Add a new degree</a>
		</div>
	</div>
</div>
<div class="row-fluid blog-page blog-item">
	<div class="span12">
		<hr />
		@foreach (var degree in Model.Items)
  {
			<div class="media row-container">
				<div class="media-body">
					@Html.HiddenFor(_ => degree.Id, new { data_target_element = "#Template_Id" })
					@Html.HiddenFor(_ => degree.GraduateId, new { data_target_element = "#Template_GraduateId" })
					<h4 class="media-heading" data-target-element="#Template_CompanyName">@Html.DisplayFor(_ => degree.CompanyName)</h4>
					<ul class="pull-right unstyled inline">
						<li><a href="#" class="btn-edit"><i class="icon-edit"></i></a></li>
						<li><a href="#" class="btn-delete" data-target-url="@Url.Action("DeleteExperience")" data-target-id="@degree.Id"><i class="icon-trash"></i></a></li>
					</ul>
					<p data-target-element = "#Template_CompanyProfile">@Html.DisplayFor(_ => degree.CompanyProfile)</p>
					<p data-target-element = "#Template_Experience">@Html.DisplayFor(_ => degree.Experience)</p>
				</div>
			</div>
			<hr />
  }
	</div>
</div>
