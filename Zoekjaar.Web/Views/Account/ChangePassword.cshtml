@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Extensions
@using Zoekjaar.Resources
@using Zoekjaar.Web.Controllers

@{
	ViewBag.Title = ApplicationStrings.ChangePassword;
}
@model ChangePasswordModel
<div class="body">
	<div class="container">
		<div class="row-fluid">
			@if (Model.IsSuccessful.HasValue)
   {
	   if (Model.IsSuccessful.Value)
	   {
				<div class="alert alert-success"><strong>@ApplicationStrings.Success</strong>  @ApplicationStrings.PasswordChanged</div>
	   }
	   else
	   {
				<div class="alert alert-error alert-block">
					<strong>@ApplicationStrings.Failed</strong>
					@foreach (var error in ViewContext.ViewData.ModelState.Single(s => s.Key == AccountController.ChangePasswordKey).Value.Errors.ToList())
	 {
						<p>@error.ErrorMessage</p>
	 }
				</div>
	   }
   }
		</div>
		<div class="row-fluid margin-bottom-10">
			<div class="span4">
				@using (Html.BeginForm())
	{
					<div class="controls">
						@Html.LabelFor(_ => _.CurrentPassword)
						@Html.PasswordFor(_ => _.CurrentPassword, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.CurrentPassword)
					</div>
					<div class="controls">
						@Html.LabelFor(_ => _.NewPassword)
						@Html.PasswordFor(_ => _.NewPassword, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.NewPassword)
					</div>
					<div class="controls">
						@Html.LabelFor(_ => _.ConfirmNewPassword)
						@Html.PasswordFor(_ => _.ConfirmNewPassword, new { @class = "span12" })
						@Html.ValidationMessageFor(_ => _.ConfirmNewPassword)
					</div>
					<div class="controls form-inline">
						<input type="submit" value="@ApplicationStrings.SaveChanges" class="btn-u pull-right" />
					</div>
	}
			</div>
		</div>
	</div>
</div>
