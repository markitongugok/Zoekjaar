@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Controllers
@using Zoekjaar.Web.Extensions
@using Zoekjaar.Resources
@using Core.Extensions
@using Entities
@using Core.Annotations

@{
	ViewBag.Title = ApplicationStrings.SearchJobs;
	var currentRoute = new RouteValueDictionary(this.ViewContext.RouteData.Values);
}

@model JobSearchModel

<div class="container">
	@using (Html.BeginForm())
 {
		<div class="row-fluid">
			@Html.AntiForgeryToken()
			<div class="controls">
				<div class="span12">
					<div class="input-append">
						@Html.LabelFor(_ => _.Criteria.Keyword)
						@Html.TextBoxFor(_ => _.Criteria.Keyword)<input class="btn-u" type="submit" value="@ApplicationStrings.Search" />
					</div>
				</div>
			</div>
		</div>

	 if (Model.Criteria.TotalRecords.HasValue)
	 {
		 if (Model.Jobs.Any())
		 {
		<div class="row-fluid search-page">
			<div class="alert alert-success">We found <strong>@Model.Criteria.TotalRecords</strong> matches.</div>
		</div>
		<div class="row-fluid search-page">
			<div class="span3 boxed">
				<div class="controls">
					@Html.LabelFor(_ => _.Criteria.JobTypeId)
					@Html.DropDownListFor(_ => _.Criteria.JobTypeId, Identifiers.JobType.Freelance.ToSelectList(), new { @class = "auto-submit" })
					@Html.LabelFor(_ => _.Criteria.Function)
					@Html.TextBoxFor(_ => _.Criteria.Function)
					@Html.LabelFor(_ => _.Criteria.Sector)
					@Html.TextBoxFor(_ => _.Criteria.Sector)
					@Html.LabelFor(_ => _.Criteria.VisaStatusId)
					@Html.DropDownListFor(_ => _.Criteria.VisaStatusId, Identifiers.VisaStatus.NA.ToSelectList(), new { @class = "auto-submit" })
				</div>
				<div class="controls form-inline">
					<input type="submit" class="btn-u" value="@ApplicationStrings.Search" />
					<button class="btn btn-warning">Reset</button>
				</div>
			</div>
			<div class="span9 boxed">
				<table class="table table-striped table-hover">
					@*<tr>
						<th>@ApplicationStrings.Title</th>
						<th>@ApplicationStrings.DatePosted</th>
						@if (this.User.Identity.IsAuthenticated)
	  { 
							<th>@ApplicationStrings.Options</th>
	  }
					</tr>*@
					@foreach (var job in Model.Jobs)
	 {
		 var logo = !string.IsNullOrEmpty(job.LogoUrl) ? job.LogoUrl : Url.Content("~/Content/images/logo.png");
		 currentRoute["id"] = job.JobId;
		 currentRoute["companyId"] = job.CompanyId;
		 var jobType = ((Identifiers.JobType)job.JobTypeId).GetDisplayName();
		 var className = ((Identifiers.JobType)job.JobTypeId).GetAttribute<BadgeAttribute>().ClassName;
		 var htmlAttributes = new Dictionary<string, object>();
		 htmlAttributes["class"] = "text-info";
						<tr>
							<td>
								@{
		 var imageUrl = !string.IsNullOrEmpty(job.LogoUrl) ? Url.Content(string.Format("~/Content/images/Companies/{0}", job.LogoUrl)) : Url.Content("~/Content/images/logo.png");
								}
								<img src="@imageUrl" alt="@job.CompanyName" style="width:100px;height:100px;" />
							</td>
							<td>
								<h4>@Html.ActionLink(job.Title, "Details", "Job", currentRoute, htmlAttributes)</h4>
								<p class="muted">@Html.DisplayFor(_ => job.CompanyName)</p>
								<p><span class="label @className">@jobType</span></p>
							</td>
							<td>
								<p class="text-error">@ApplicationStrings.Location: <strong>@job.Location</strong></p>

								@if (this.User.Identity.IsAuthenticated)
		{
									<div>
										@if (job.CanApply)
		  { 
											<button id="apply-button" class="btn btn-primary btn-mini apply" data-target-url="@Url.Action("Apply", currentRoute)" data-job-title="@job.Title">@Html.LabelFor(_ => job.CanApply)</button>
		  }
		  else
		  {
											<span class="label label-info">@job.MyStatus.GetDisplayName()</span>
		  }
									</div>
		}
							</td>
						</tr>
	 }
				</table>
				<div class="pagination">
					<ul>
						@for (var i = 0; i < (Model.Criteria.TotalRecords / CompanyController.PageSize) + (Model.Criteria.TotalRecords % CompanyController.PageSize > 0 ? 1 : 0); i++)
	  {
		  currentRoute["pageNumber"] = i;

							<li><a href="@Url.Action("Search", currentRoute)">@(i + 1)</a></li>
	  }
					</ul>
				</div>
			</div>
		</div>
		 }
		 else
		 {
		<div class="row-fluid search-page">
			<div class="alert alert-info">
				<strong>Ooops!</strong>
				We found <strong>0</strong> matches.
			
			</div>
		</div>
		 }
	 }
 }
</div>
<!-- Modal -->
<div class="modal" id="confirm" style="display: none;">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title">@ApplicationStrings.ConfirmJobApplication</h4>
			</div>
			<div class="modal-body" data-format-string='@ApplicationStrings.ConfirmJobApplicationMessage'></div>
			<div class="modal-footer">
				<a href="#" class="btn" data-dismiss="modal">@ApplicationStrings.Cancel</a>
				<a href="#" id="confirm-application" class="btn-u">@ApplicationStrings.Apply</a>
			</div>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<!-- /.modal -->
