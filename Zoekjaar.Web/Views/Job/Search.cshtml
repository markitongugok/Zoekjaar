@using Zoekjaar.Web.Models
@using Zoekjaar.Web.Controllers
@using Zoekjaar.Web.Extensions
@using Zoekjaar.Resources
@using Core.Extensions
@using Entities

@{
	ViewBag.Title = ApplicationStrings.SearchJobs;
	var currentRoute = new RouteValueDictionary(this.ViewContext.RouteData.Values);
}

@model JobSearchModel

<div class="container">
	<div class="row-fluid">
		@using (Html.BeginForm())
  {
			@Html.AntiForgeryToken()
		
			<div class="controls">
				<div class="span12">
					<div class="input-append">
						@Html.LabelFor(_ => _.Criteria.Keyword)
						@Html.TextBoxFor(_ => _.Criteria.Keyword)<input class="btn-u" type="submit" value="@ApplicationStrings.Search" />
					</div>
				</div>
			</div>
			<div class="controls">
				<div class="span3">
					@Html.LabelFor(_ => _.Criteria.JobTypeId)
					@Html.DropDownListFor(_ => _.Criteria.JobTypeId, Identifiers.JobType.FreeLance.ToSelectList())
				</div>
				<div class="span3">
					@Html.LabelFor(_ => _.Criteria.Function)
					@Html.TextBoxFor(_ => _.Criteria.Function)
				</div>
				<div class="span3">
					@Html.LabelFor(_ => _.Criteria.Sector)
					@Html.TextBoxFor(_ => _.Criteria.Sector)
				</div>
				<div class="span3">
					@Html.LabelFor(_ => _.Criteria.VisaStatusId)
					@Html.DropDownListFor(_ => _.Criteria.VisaStatusId, Identifiers.VisaStatus.NA.ToSelectList())
				</div>
			</div>
		
  }
	</div>
</div>
<div class="container">
	<div class="row-fluid search-page">

		@{
			if (Model.Criteria.TotalRecords.HasValue)
			{
				if (Model.Jobs.Any())
				{
			<div class="alert alert-success">We found <strong>@Model.Criteria.TotalRecords</strong> matches.</div>
			<table class="table table-striped">
				<tr>
					<th>@ApplicationStrings.Title</th>
					<th>@ApplicationStrings.DatePosted</th>
					<th>@ApplicationStrings.Options</th>
				</tr>
				@foreach (var job in Model.Jobs)
	{
		var logo = !string.IsNullOrEmpty(job.LogoUrl) ? job.LogoUrl : Url.Content("~/Content/images/logo.png");
		currentRoute["id"] = job.JobId;
		currentRoute["companyId"] = job.CompanyId;
		var jobType = ((Identifiers.JobType)job.JobTypeId).GetDisplayName();
					<tr>
						<td>
							<span class="label">@jobType</span>
							@Html.ActionLink(job.Title, "Details", "Job", currentRoute, null)
						</td>
						<td>
							@Html.DisplayFor(_ => job.DatePosted)
						</td>
						<td>
							@if (job.CanApply)
	   { 

								<button id="apply-button" class="btn-u btn-mini apply" data-target-url="@Url.Action("Apply", currentRoute)">@Html.LabelFor(_ => job.CanApply)</button>
	   }
	   else
	   {

								<span class="label label-info">Applied</span>
	   }
						</td>
					</tr>
	}
			</table>
			<div class="pagination">
				<ul>
					@for (var i = 0; i < (Model.Criteria.TotalRecords / CompanyController.PageSize) + (Model.Criteria.TotalRecords % CompanyController.PageSize > 0 ? 1 : 0); i++)
	 {
		 currentRoute["pageNumber"] = i;

						<li><a href="@Url.Action("Search", currentRoute)">@(i + 1)</a></li>
	 }
				</ul>
			</div>
				}
				else
				{

			<div class="alert alert-info">
				<strong>Ooops!</strong>
				We found <strong>0</strong> matches.
			
			</div>
				}
			}
		}
	</div>

</div>
